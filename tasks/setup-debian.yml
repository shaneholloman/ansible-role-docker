---
- name: Ensure old versions of Docker are not installed.
  ansible.builtin.package:
    name:
      - docker
      - docker-engine
    state: absent

- name: Ensure dependencies are installed.
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
    state: present
  when: docker_add_repo | bool

- name: Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).
  ansible.builtin.apt:
    name: gnupg2
    state: present
  when: ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')

- name: Ensure additional dependencies are installed (on Ubuntu >= 20.04).
  ansible.builtin.apt:
    name: gnupg
    state: present
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('20.04', '>=')

- name: Add Docker APT key.
  ansible.builtin.apt_key:
    url: "{{ docker_apt_gpg_key }}"
    state: present
  register: add_repository_key
  ignore_errors: "{{ docker_apt_ignore_key_error }}"
  when: docker_add_repo | bool

- name: Ensure curl is present (on older systems without SNI).
  ansible.builtin.package:
    name: curl
    state: present
  when: add_repository_key is failed and docker_add_repo | bool

- name: Add Docker apt key (alternative for older systems without SNI).
  ansible.builtin.uri:
    url: "{{ docker_apt_gpg_key }}"
    method: GET
    return_content: true
  register: result
  when: add_repository_key is failed and docker_add_repo | bool
  notify: Add key

- name: Run handlers if necessary
  ansible.builtin.meta: flush_handlers

- name: Add Docker registry
  ansible.builtin.apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: true
  when: docker_add_repo | bool
